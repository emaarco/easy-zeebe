# Use this only in dev environments. It's not intended for production usage.
services:

  postgres:
    image: postgres:${POSTGRES_VERSION}
    container_name: easy-postgres
    ports:
      - 5432:5432
    restart: always
    environment:
      POSTGRES_DB: easy-zeebe
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin

  # Consolidated Zeebe + Operate + Tasklist - https://docs.camunda.io/docs/self-managed/setup/deploy/other/docker/#zeebe
  orchestration:
    image: camunda/camunda:${CAMUNDA_VERSION}
    container_name: easy-zeebe
    ports:
      - "26500:26500"
      - "9600:9600"
      - "8088:8080"
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "bash -c 'exec 3<>/dev/tcp/127.0.0.1/9600 && echo -e \"GET /actuator/health/status HTTP/1.1\r\nHost: localhost\r\n\r\n\" >&3 && head -n 1 <&3'" ]
      interval: 1s
      retries: 30
      start_period: 30s
    volumes:
      - zeebe:/usr/local/zeebe/data
    configs:
      - source: orchestration-config
        target: /usr/local/camunda/config/application.yaml
    networks:
      - camunda
    depends_on:
      elasticsearch:
        condition: service_healthy

  elasticsearch: # https://hub.docker.com/_/elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}
    container_name: elasticsearch
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      # allow running with low disk space
      - cluster.routing.allocation.disk.threshold_enabled=false
      # Disable noisy deprecation logs, see https://github.com/camunda/camunda/issues/26285
      - logger.org.elasticsearch.deprecation="OFF"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9200/_cat/health | grep -q green" ]
      interval: 1s
      retries: 30
      start_period: 30s
      timeout: 1s
    volumes:
      - elastic:/usr/share/elasticsearch/data
    networks:
      - camunda

volumes:
  elastic:
  zeebe:

networks:
  camunda:

configs:

  orchestration-config:
    content: |
      management.endpoints.configprops.show-values: always
      camunda:
        system:
          cpu-thread-count: "3"
          io-thread-count: "3"
        security:
          authentication:
            method: "basic"
            unprotectedApi: true
          authorizations:
            enabled: false
          initialization:
            users:
              - username: "demo"
                password: "demo"
                name: "Demo User"
                email: "demo@demo.com"
            defaultRoles.admin.users:
              - "demo"
        database.index.numberOfReplicas: 0 # Single node elasticsearch so we disable replication
        data:
          secondary-storage:
            type: elasticsearch
            elasticsearch:
              cluster-name: elasticsearch
              url: "http://elasticsearch:9200"
